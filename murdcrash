-- > Declarations < --

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LP = Players.LocalPlayer
local roles
local Murderer -- This will store the Murderer's name
local flingForce = 1000 -- Force to apply to fling the murderer
local teleportDelay = 0.1 -- Delay between teleports (faster for spamming)
local flingCooldown = 0.1 -- Delay between flings to prevent excessive force spam
local isFlung = false -- Flag to prevent multiple flings within short time
local isScriptEnabled = true -- Flag to control the script's activity

-- > Functions < --

function IsAlive(Player) -- Checks if a player is alive
    for i, v in pairs(roles) do
        if Player.Name == i then
            if not v.Killed and not v.Dead then
                return true
            else
                return false
            end
        end
    end
    return false
end

function GetMurderer() -- Get the Murderer's character
    for i, v in pairs(roles) do
        if v.Role == "Murderer" then
            return i
        end
    end
    return nil
end

function TeleportInsideMurderer(murdererCharacter) -- Teleport inside the murderer
    if murdererCharacter and murdererCharacter:FindFirstChild("HumanoidRootPart") then
        local humanoidRootPart = murdererCharacter:FindFirstChild("HumanoidRootPart")
        -- Teleport directly into the HumanoidRootPart of the murderer
        LP.Character.HumanoidRootPart.CFrame = humanoidRootPart.CFrame
    end
end

function FlingMurderer(murdererCharacter) -- Apply force to fling the murderer
    if murdererCharacter and murdererCharacter:FindFirstChild("Humanoid") then
        local humanoid = murdererCharacter:FindFirstChild("Humanoid")
        
        -- Apply a fling force by creating a BodyVelocity
        local bodyVelocity = Instance.new("BodyVelocity")
        bodyVelocity.MaxForce = Vector3.new(100000, 100000, 100000) -- High force to fling
        bodyVelocity.Velocity = Vector3.new(math.random(-flingForce, flingForce), math.random(flingForce, flingForce), math.random(-flingForce, flingForce))
        bodyVelocity.Parent = murdererCharacter.HumanoidRootPart
        
        -- Destroy the BodyVelocity after a short time to stop the force
        game.Debris:AddItem(bodyVelocity, 0.2) -- Remove after 0.2 seconds to prevent continuous force application
    end
end

-- > Loops < --

RunService.RenderStepped:connect(function()
    -- If the script is disabled, exit the function
    if not isScriptEnabled then
        return
    end

    roles = ReplicatedStorage:FindFirstChild("GetPlayerData", true):InvokeServer()
    
    -- Find the murderer
    Murderer = GetMurderer()
    
    if Murderer then
        local murdererCharacter = Players[Murderer] and Players[Murderer].Character
        local murdererHumanoid = murdererCharacter and murdererCharacter:FindFirstChild("Humanoid")
        local playerHumanoid = LP.Character and LP.Character:FindFirstChild("Humanoid")
        
        -- Check if both the murderer and the player are alive
        if murdererCharacter and murdererHumanoid and playerHumanoid then
            if IsAlive(Players[Murderer]) and playerHumanoid.Health > 0 then
                -- Continuously teleport and fling the murderer
                TeleportInsideMurderer(murdererCharacter) -- Teleport directly into the murderer
                wait(teleportDelay) -- Delay to prevent instant teleport spamming
                
                -- Apply fling only if the cooldown has passed
                if not isFlung then
                    FlingMurderer(murdererCharacter) -- Fling the murderer
                    isFlung = true
                    wait(flingCooldown) -- Cooldown before the next fling
                    isFlung = false
                end
            else
                -- Stop the loop if either the murderer or the player is dead
                return
            end
        end
    end
end)

-- Disable the script after 15 seconds
wait(15)
isScriptEnabled = false
print("Script disabled after 15 seconds.")
